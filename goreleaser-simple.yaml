variables:
  main: ""
  binary_name: ""
  description: ""
  github_url: ""
  maintainer: ""
  homepage: "https://charm.sh/"
  brew_commit_author_name: ""
  brew_commit_author_email: ""
  brew_owner: charmbracelet
  docker_io_registry_owner: charmcli
  ghcr_io_registry_owner: charmbracelet
  aur_project_name: ""

gomod:
  proxy: true

builds:
  - binary: '{{ with .Var.binary_name }}{{ . }}{{ else }}{{ .ProjectName }}{{ end }}'
    env:
      - CGO_ENABLED=0
    main: '{{ with .main }}{{ . }}{{ else }}.{{ end }}'
    ldflags: -s -w -X main.Version=v{{ .Version }} -X main.CommitSHA={{ .Commit }} -X main.CommitDate={{ .CommitDate }}
    goos:
      - linux
      - darwin
      - windows
      - freebsd
      - openbsd
      - netbsd
    goarch:
      - amd64
      - arm64
      - "386"
      - arm
    goarm:
      - "7"
    ignore:
      - goos: windows
        goarch: arm64
      - goos: windows
        goarm: "7"

archives:
  - format_overrides:
      - goos: windows
        format: zip
    replacements:
      windows: Windows
      darwin: Darwin
      linux: Linux
      386: i386
      amd64: x86_64
    files:
      - README*
      - LICENSE*

nfpms:
  - vendor: charmbracelet
    homepage: '{{ .Var.homepage }}'
    maintainer: '{{ .Var.maintainer }}'
    description: '{{ .Var.description }}'
    file_name_template: '{{ .ConventionalFileName }}'
    license: MIT
    formats:
      - apk
      - deb
      - rpm
    rpm:
      signature:
        key_file: '{{ if ne (index .Env "GPG_KEY_PATH") "" }}{{ .Env.GPG_KEY_PATH }}{{ else }}{{ end }}'
    deb:
      signature:
        key_file: '{{ if ne (index .Env "GPG_KEY_PATH") "" }}{{ .Env.GPG_KEY_PATH }}{{ else }}{{ end }}'

furies:
  - account: '{{ with .Env.FURY_TOKEN }}charmcli{{ else }}{{ end }}'
    secret_name: FURY_TOKEN

brews:
  - tap:
      owner: '{{ .Var.brew_owner }}'
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    commit_author:
      name: '{{ .Var.brew_commit_author_name }}'
      email: '{{ .Var.brew_commit_author_email }}'
    homepage: '{{ .Var.homepage }}'
    description: '{{ .Var.description }}'

scoop:
  bucket:
    owner: '{{ .Var.brew_owner }}'
    name: scoop-bucket
    token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
  commit_author:
    name: '{{ .Var.brew_commit_author_name }}'
    email: '{{ .Var.brew_commit_author_email }}'
  homepage: '{{ .Var.homepage }}'
  description: '{{ .Var.description }}'
  license: MIT

aurs:
  - maintainers: ['{{ .Var.maintainer }}']
    description: '{{ .Var.description }}'
    name: '{{ with .Var.aur_project_name }}{{ . }}{{ else }}{{ .ProjectName }}{{ end }}-bin'
    homepage: '{{ .Var.homepage }}'
    license: MIT
    private_key: '{{ .Env.AUR_KEY }}'
    git_url: 'ssh://aur@aur.archlinux.org/{{ with .Var.aur_project_name }}{{ . }}{{ else }}{{ .ProjectName }}{{ end }}-bin.git'
    package: |-
      # bin
      install -Dm755 "./{{ .ProjectName }}" "${pkgdir}/usr/bin/{{ .ProjectName }}"
      # license
      mkdir -p "${pkgdir}/usr/share/licenses/{{ .ProjectName }}/"
      install -Dm644 ./LICENSE* "${pkgdir}/usr/share/licenses/{{ .ProjectName }}/"

checksum:
  name_template: 'checksums.txt'

source:
  enabled: true

sboms:
  - artifacts: archive
  - id: source
    artifacts: source

snapshot:
  name_template: "{{ incpatch .Version }}-snapshot"

nightly:
  name_template: "{{ incpatch .Version }}-devel"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
    - '^test:'
    - '^chore'
    - 'merge conflict'
    - Merge pull request
    - Merge remote-tracking branch
    - Merge branch
    - go mod tidy
  groups:
    - title: Dependency updates
      regexp: "^.*feat\\(deps\\)*:+.*$"
      order: 300
    - title: 'New Features'
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 100
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 200
    - title: 'Documentation updates'
      regexp: "^.*docs[(\\w)]*:+.*$"
      order: 400
    - title: Other work
      order: 9999

signs:
  - cmd: cosign
    certificate: '${artifact}.pem'
    args:
      - sign-blob
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'
      - '--yes'
    artifacts: checksum
    output: true

release:
  footer: |
    * * *

    <a href="https://charm.sh/"><img alt="The Charm logo" src="https://stuff.charm.sh/charm-badge.jpg" width="400"></a>

    Thoughts? Questions? We love hearing from you. Feel free to reach out on [Twitter](https://twitter.com/charmcli), [The Fediverse](https://mastodon.technology/@charm), or on [Discord](https://charm.sh/chat).
