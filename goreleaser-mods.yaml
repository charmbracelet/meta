# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json

variables:
  main: ""
  aur_project_name: ""

  homepage: "https://charm.sh/"
  brew_owner: charmbracelet
  description: "GPT-4 on the command line"
  github_url: "https://github.com/charmbracelet/mods"
  maintainer: "Toby Padilla <toby@charm.sh>"
  brew_commit_author_name: "Toby Padilla"
  brew_commit_author_email: "toby@charm.sh"

before:
  hooks:
    - go mod tidy
    - rm -rf completions
    - mkdir completions
    - cmd: sh -c 'go run . completion "bash" >./completions/{{ .ProjectName }}.bash'
      env: ["__MODS_CMP_ENABLED=1"]
    - cmd: sh -c 'go run . completion "zsh" >./completions/{{ .ProjectName }}.zsh'
      env: ["__MODS_CMP_ENABLED=1"]
    - cmd: sh -c 'go run . completion "fish" >./completions/{{ .ProjectName }}.fish'
      env: ["__MODS_CMP_ENABLED=1"]

gomod:
  proxy: true

builds:
  - env:
      - CGO_ENABLED=0
    main: "{{ with .Var.main }}{{ . }}{{ else }}.{{ end }}"
    ldflags: -s -w -X main.Version=v{{ .Version }} -X main.CommitSHA={{ .Commit }} -X main.CommitDate={{ .CommitDate }}
    targets:
      # supported modernc.org/sqlite platforms:
      # https://pkg.go.dev/modernc.org/sqlite#hdr-Supported_platforms_and_architectures
      - darwin_amd64_v1
      - darwin_arm64
      - freebsd_amd64_v1
      - freebsd_arm64
      - linux_386
      - linux_amd64_v1
      - linux_arm_7
      - linux_arm64
      - windows_amd64_v1
      - windows_arm64

archives:
  - format_overrides:
      - goos: windows
        format: zip
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    files:
      - README*
      - LICENSE*
      - completions/*

nfpms:
  - vendor: charmbracelet
    homepage: "{{ .Var.homepage }}"
    maintainer: "{{ .Var.maintainer }}"
    file_name_template: "{{ .ConventionalFileName }}"
    license: MIT
    contents:
      - src: ./completions/{{ .ProjectName }}.bash
        dst: /etc/bash_completion.d/{{ .ProjectName }}
      - src: ./completions/{{ .ProjectName }}.fish
        dst: /usr/share/fish/vendor_completions.d/{{ .ProjectName }}.fish
      - src: ./completions/{{ .ProjectName }}.zsh
        dst: /usr/share/zsh/site-functions/_{{ .ProjectName }}
    formats:
      - apk
      - deb
      - rpm
    rpm:
      signature:
        key_file: '{{ if ne (index .Env "GPG_KEY_PATH") "" }}{{ .Env.GPG_KEY_PATH }}{{ else }}{{ end }}'
    deb:
      signature:
        key_file: '{{ if ne (index .Env "GPG_KEY_PATH") "" }}{{ .Env.GPG_KEY_PATH }}{{ else }}{{ end }}'

furies:
  - account: "{{ with .Env.FURY_TOKEN }}charmcli{{ else }}{{ end }}"
    secret_name: FURY_TOKEN

brews:
  - repository:
      owner: "{{ .Var.brew_owner }}"
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    commit_author:
      name: "{{ .Var.brew_commit_author_name }}"
      email: "{{ .Var.brew_commit_author_email }}"
    homepage: "{{ .Var.homepage }}"
    description: "{{ .Var.description }}"
    extra_install: |-
      bash_completion.install "completions/{{ .ProjectName }}.bash" => "{{ .ProjectName }}"
      zsh_completion.install "completions/{{ .ProjectName }}.zsh" => "_{{ .ProjectName }}"
      fish_completion.install "completions/{{ .ProjectName }}.fish"

scoops:
  - repository:
      owner: "{{ .Var.brew_owner }}"
      name: scoop-bucket
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    commit_author:
      name: "{{ .Var.brew_commit_author_name }}"
      email: "{{ .Var.brew_commit_author_email }}"
    homepage: "{{ .Var.homepage }}"
    description: "{{ .Var.description }}"
    license: MIT

aurs:
  - maintainers: ["{{ .Var.maintainer }}"]
    description: "{{ .Var.description }}"
    name: "{{ with .Var.aur_project_name }}{{ . }}{{ else }}{{ .ProjectName }}{{ end }}-bin"
    homepage: "{{ .Var.homepage }}"
    license: MIT
    private_key: "{{ .Env.AUR_KEY }}"
    git_url: "ssh://aur@aur.archlinux.org/{{ with .Var.aur_project_name }}{{ . }}{{ else }}{{ .ProjectName }}{{ end }}-bin.git"
    package: |-
      # bin
      install -Dm755 "./{{ .ProjectName }}" "${pkgdir}/usr/bin/{{ .ProjectName }}"
      # license
      mkdir -p "${pkgdir}/usr/share/licenses/{{ .ProjectName }}/"
      install -Dm644 ./LICENSE* "${pkgdir}/usr/share/licenses/{{ .ProjectName }}/"
      # completions
      mkdir -p "${pkgdir}/usr/share/bash-completion/completions/"
      mkdir -p "${pkgdir}/usr/share/zsh/site-functions/"
      mkdir -p "${pkgdir}/usr/share/fish/vendor_completions.d/"
      install -Dm644 "./completions/{{ .ProjectName }}.bash" "${pkgdir}/usr/share/bash-completion/completions/{{ .ProjectName }}"
      install -Dm644 "./completions/{{ .ProjectName }}.zsh" "${pkgdir}/usr/share/zsh/site-functions/_{{ .ProjectName }}"
      install -Dm644 "./completions/{{ .ProjectName }}.fish" "${pkgdir}/usr/share/fish/vendor_completions.d/{{ .ProjectName }}.fish"

nix:
  - repository:
      owner: "{{ .Var.brew_owner }}"
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
      name: nur
    homepage: "{{ .Var.homepage }}"
    description: "{{ .Var.description }}"
    license: mit
    extra_install: |-
      installShellCompletion ./completions/*

winget:
  - publisher: charmbracelet
    license: MIT
    copyright: Charmbracelet, Inc
    homepage: "{{ .Var.homepage }}"
    short_description: "{{ .Var.description }}"
    repository:
      owner: "{{ .Var.brew_owner }}"
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
      name: winget-pkgs
      branch: "{{.ProjectName}}-{{.Version}}"
      pull_request:
        enabled: true
        draft: true
        base:
          owner: microsoft
          name: winget-pkgs
          branch: master
checksum:
  name_template: "checksums.txt"

source:
  enabled: true

sboms:
  - artifacts: archive
  - id: source
    artifacts: source

snapshot:
  name_template: "{{ incpatch .Version }}-snapshot"

nightly:
  name_template: "{{ incpatch .Version }}-devel"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^test:"
      - "^chore"
      - "merge conflict"
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
      - go mod tidy
  groups:
    - title: Dependency updates
      regexp: "^.*feat\\(deps\\)*:+.*$"
      order: 300
    - title: "New Features"
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 100
    - title: "Bug fixes"
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 200
    - title: "Documentation updates"
      regexp: "^.*docs[(\\w)]*:+.*$"
      order: 400
    - title: Other work
      order: 9999

signs:
  - cmd: cosign
    certificate: "${artifact}.pem"
    args:
      - sign-blob
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes"
    artifacts: checksum
    output: true

release:
  footer: |
    * * *

    <a href="https://charm.sh/"><img alt="The Charm logo" src="https://stuff.charm.sh/charm-badge.jpg" width="400"></a>

    Thoughts? Questions? We love hearing from you. Feel free to reach out on [Twitter](https://twitter.com/charmcli), [The Fediverse](https://mastodon.technology/@charm), or on [Discord](https://charm.sh/chat).
